@use 'sass:math';
@use '@/assets/styles/variables' as *;

// Font
@mixin font-face($weight, $fileName) {
  @font-face {
    font-family: 'Inter';
    font-weight: $weight;
    font-style: normal;
    font-display: auto;
    unicode-range: U+000-5FF;
    src: local('Inter'), url('/fonts/#{$fileName}.woff2') format('woff2');
  }
}
@mixin font-base($size: 1rem, $weight: 400, $line-height: 130%) {
  font-family: 'Inter', sans-serif;
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  letter-spacing: 0.5px;
}
@mixin font($size: 1rem, $weight: 400, $line-height: 130%) {
  font-size: $size;
  font-weight: $weight;
}

// Нивелируем значение html font-size 62.5% для передачи в миксин размер текста в пикселях
@mixin fluid-text($max: 48, $min: 16) {
  $maxViewportWidth: calc(1400 / 62.5 * 100);
  $minViewportWidth: calc(320 / 62.5 * 100);

  $maxSize: math.div(calc($max / 62.5 * 100), 16);
  $minSize: math.div(calc($min / 62.5 * 100), 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  $yAxisIntersection: -$minWidth * $slope + $minSize;

  font-size: clamp(
    #{$minSize * 1rem},
    #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
    #{$maxSize * 1rem}
  );
  line-height: 130%;
}

// Transition
@mixin transition(
  $duration: var(--transition-normal),
  $delay: 0s,
  $timing-function: cubic-bezier(0.45, 0, 0.55, 1),
  $property: all
) {
  transform-origin: 50% 50%;
  transition: $property $duration $timing-function $delay;
}
@mixin transition-enter(
  $duration: calc(var(--transition-normal) - 0.1s),
  $delay: 0s,
  $timing-function: cubic-bezier(0.65, 0, 0.35, 1),
  $property: all
) {
  @include transition($duration, $delay, $timing-function, $property);
}

// Media query
@mixin mq($size) {
  @if ($size == 2xl) {
    @media (max-width: 2000px) {
      @content;
    }
  } @else if ($size == xl) {
    @media (max-width: 1200px) {
      @content;
    }
  } @else if ($size == l) {
    @media (max-width: 992px) {
      @content;
    }
  } @else if ($size == m) {
    @media (max-width: 768px) {
      @content;
    }
  } @else if ($size == s) {
    @media (max-width: 576px) {
      @content;
    }
  } @else if ($size == xs) {
    @media (max-width: 320px) {
      @content;
    }
  } @else {
    @media (max-width: #{$size}px) {
      @content;
    }
  }
}

// Active element
@mixin active() {
  @media (hover: none) {
    @include transition;
    -webkit-tap-highlight-color: transparent;
    &:active,
    &:focus {
      @include transition-enter;
      @content;
    }
  }
  @media (hover: hover),
    all and (-ms-high-contrast: none),
    (-ms-high-contrast: active) {
    @include transition;
    cursor: pointer;
    &:hover,
    &:focus-visible {
      @include transition-enter;
      @content;
    }
  }
}
